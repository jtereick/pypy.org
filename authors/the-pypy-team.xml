<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PyPy (Posts by The PyPy Team)</title><link>https://www.pypy.org/</link><description></description><atom:link href="https://www.pypy.org/authors/the-pypy-team.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2021 &lt;a href="mailto:pypy-dev@pypy.org"&gt;The PyPy Team&lt;/a&gt; </copyright><lastBuildDate>Sun, 07 Nov 2021 15:32:24 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>PyPy v7.3.7: bugfix release of python 3.7 and 3.8</title><link>https://www.pypy.org/posts/2021/10/pypy-v737-release.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;section id="pypy-v7-3-7-bug-fix-release-of-3-7-3-8"&gt;
&lt;h2&gt;PyPy v7.3.7: bug-fix release of 3.7, 3.8&lt;/h2&gt;
&lt;p&gt;We are releasing a PyPy 7.3.7 to fix the recent 7.3.6 release's binary
incompatibility with the previous 7.3.x releases. We mistakenly added fields
to &lt;code class="docutils literal"&gt;PyFrameObject&lt;/code&gt; and &lt;code class="docutils literal"&gt;PyDateTime_CAPI&lt;/code&gt; that broke the promise of binary
compatibility, which means that c-extension wheels compiled for 7.3.5 will not
work with 7.3.6 and via-versa. Please do not use 7.3.6.&lt;/p&gt;
&lt;p&gt;We have added a cursory test for binary API breakage to the
&lt;a class="reference external" href="https://github.com/pypy/binary-testing"&gt;https://github.com/pypy/binary-testing&lt;/a&gt; repo which hopefully will prevent such
mistakes in the future.&lt;/p&gt;
&lt;p&gt;Additionally, a few smaller bugs were fixed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code class="docutils literal"&gt;uint&lt;/code&gt; for the &lt;code class="docutils literal"&gt;request&lt;/code&gt; argument of &lt;code class="docutils literal"&gt;fcntl.ioctl&lt;/code&gt; (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3568"&gt;3568&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix incorrect tracing of &lt;cite&gt;while True`&lt;/cite&gt; body in 3.8 (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3577"&gt;3577&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Properly close resources when using a &lt;code class="docutils literal"&gt;conncurrent.futures.ProcessPool&lt;/code&gt;
(issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3317"&gt;3317&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix the value of &lt;code class="docutils literal"&gt;LIBDIR&lt;/code&gt; in &lt;code class="docutils literal"&gt;_sysconfigdata&lt;/code&gt; in 3.8 (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3582"&gt;3582&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find links to download the v7.3.7 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;blog site&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://www.pypy.org/posts/2021/10/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2021/10/project-ideas.html"&gt;help&lt;/a&gt; with making RPython's JIT even better.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.7, and
3.8. It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 64 bits, OpenBSD, FreeBSD)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy does support ARM 32 bit and PPC64 processors, but does not release binaries.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2021/10/pypy-v737-release.html</guid><pubDate>Mon, 25 Oct 2021 05:53:45 GMT</pubDate></item><item><title>PyPy v7.3.6: release of python 2.7, 3.7, and 3.8</title><link>https://www.pypy.org/posts/2021/10/pypy-v736-release.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;section id="pypy-v7-3-6-release-of-python-2-7-3-7-and-3-8-beta"&gt;
&lt;h2&gt;PyPy v7.3.6: release of python 2.7, 3.7, and 3.8-beta&lt;/h2&gt;
&lt;p&gt;The PyPy team is proud to release version 7.3.6 of PyPy, which includes
three different interpreters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18+ (the &lt;code class="docutils literal"&gt;+&lt;/code&gt; is for
backported security updates)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.7,  which is an interpreter supporting the syntax and the features of
Python 3.7, including the stdlib for CPython 3.7.12.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.8, which is an interpreter supporting the syntax and the features of
Python 3.8, including the stdlib for CPython 3.8.12. Since this is our
first release of the interpreter, we relate to this as "beta" quality. We
welcome testing of this version, if you discover incompatibilites, please
report them so we can gain confidence in the version.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the other 7.3
releases. Highlights of the release, since the release of 7.3.5 in May 2021,
include:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;We have merged a backend for &lt;a class="reference external" href="https://hpyproject.org/"&gt;HPy&lt;/a&gt;, the better C-API interface. The backend
implements HPy version 0.0.3.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Translation of PyPy into a binary, known to be slow, is now about 40%
faster. On a modern machine, PyPy3.8 can translate in about 20 minutes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy Windows 64 is now available on &lt;a class="reference external" href="https://conda-forge.org/blog//2020/03/10/pypy"&gt;conda-forge&lt;/a&gt;, along with nearly 700
commonly used binary packages. This new offering joins the more than 1000
conda packages for PyPy on Linux and macOS. Many thanks to the conda-forge
maintainers for pushing this forward over the past 18 months.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Speed improvements were made to &lt;code class="docutils literal"&gt;io&lt;/code&gt;, &lt;code class="docutils literal"&gt;sum&lt;/code&gt;, &lt;code class="docutils literal"&gt;_ssl&lt;/code&gt; and more. These
were done in response to user feedback.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The 3.8 version of the release contains a beta-quality improvement to the
JIT to better support &lt;a class="reference external" href="https://www.pypy.org/posts/2021/09/jit-auto-generated-code.html"&gt;compiling huge Python functions&lt;/a&gt; by breaking them
up into smaller pieces.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The release of Python3.8 required a concerted effort. We were greatly
helped by @isidentical (Batuhan Taskaya) and other new contributors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The 3.8 package now uses the same layout as CPython, and many of the
PyPy-specific changes to &lt;code class="docutils literal"&gt;sysconfig&lt;/code&gt;, &lt;code class="docutils literal"&gt;distutils.sysconfig&lt;/code&gt;, and
&lt;code class="docutils literal"&gt;distutils.commands.install.py&lt;/code&gt; have been removed. The &lt;code class="docutils literal"&gt;stdlib&lt;/code&gt; now
is located in &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;base&amp;gt;/lib/pypy3.8&lt;/span&gt;&lt;/code&gt; on &lt;code class="docutils literal"&gt;posix&lt;/code&gt; systems, and in
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;base&amp;gt;/Lib&lt;/span&gt;&lt;/code&gt; on Windows. The include files on windows remain the same.
On &lt;code class="docutils literal"&gt;posix&lt;/code&gt; they are in &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;base&amp;gt;/include/pypy3.8&lt;/span&gt;&lt;/code&gt;. Note we still use the
&lt;code class="docutils literal"&gt;pypy&lt;/code&gt; prefix to prevent mixing the files with CPython (which uses
&lt;code class="docutils literal"&gt;python&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;We recommend updating. You can find links to download the v7.3.6 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;blog&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://pypy.org"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://doc.pypy.org/en/latest/project-ideas.html"&gt;help&lt;/a&gt; with making RPython's JIT even better. Since the
previous release, we have accepted contributions from 7 new contributors,
thanks for pitching in, and welcome to the project!&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.7, and
soon 3.8. It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 64 bits, OpenBSD, FreeBSD)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;big- and little-endian variants of &lt;strong&gt;PPC64&lt;/strong&gt; running Linux,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy does support Windows 32-bit and ARM 32 bit processors, but does not
release binaries. Please reach out to us if you wish to sponsor releases for
those platforms.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-else-is-new"&gt;
&lt;h3&gt;What else is new?&lt;/h3&gt;
&lt;p&gt;For more information about the 7.3.6 release, see the &lt;a class="reference external" href="https://doc.pypy.org/en/latest/release-v7.3.6.html#changelog"&gt;full changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please update, and continue to help us make PyPy better.&lt;/p&gt;
&lt;p&gt;Cheers,
The PyPy team&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2021/10/pypy-v736-release.html</guid><pubDate>Sun, 17 Oct 2021 05:53:45 GMT</pubDate></item><item><title>PyPy v7.3.5: bugfix release of python 2.7 and 3.7</title><link>https://www.pypy.org/posts/2021/05/pypy-v735-release.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;section id="pypy-v7-3-5-release-of-2-7-and-3-7"&gt;
&lt;h2&gt;PyPy v7.3.5: release of 2.7 and 3.7&lt;/h2&gt;
&lt;p&gt;We are releasing a PyPy 7.3.5 with bugfixes for PyPy 7.3.4, released April 4.
PyPy 7.3.4 was the first release that runs on windows 64-bit, so that support
is still "beta". We are releasing it in the hopes that we can garner momentum
for its continued support, but are already aware of some problems, for instance
it errors in the NumPy test suite (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3462"&gt;3462&lt;/a&gt;). Please help out with testing
the releae and reporting successes and failures, financially supporting our
ongoing work, and helping us find the source of these problems.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;The new windows 64-bit builds improperly named c-extension modules
with the same extension as the 32-bit build (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3443"&gt;3443&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the windows-specific &lt;code class="docutils literal"&gt;PC/pyconfig.h&lt;/code&gt; rather than the posix one&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix the return type for &lt;code class="docutils literal"&gt;_Py_HashDouble&lt;/code&gt; which impacts 64-bit windows&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A change to the python 3.7 &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;sysconfig.get_config_var('LIBDIR')&lt;/span&gt;&lt;/code&gt; was wrong,
leading to problems finding &lt;cite&gt;libpypy3-c.so&lt;/cite&gt; for embedded PyPy (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3442"&gt;3442&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instantiate &lt;code class="docutils literal"&gt;distutils.command.install&lt;/code&gt; schema for PyPy-specific
&lt;code class="docutils literal"&gt;implementation_lower&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Delay thread-checking logic in greenlets until the thread is actually started
(continuation of issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3441"&gt;3441&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Four upstream (CPython) security patches were applied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bugs.python.org/issue42988"&gt;BPO 42988&lt;/a&gt; to remove &lt;code class="docutils literal"&gt;pydoc.getfile&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bugs.python.org/issue43285"&gt;BPO 43285&lt;/a&gt; to not trust the &lt;code class="docutils literal"&gt;PASV&lt;/code&gt; response in &lt;code class="docutils literal"&gt;ftplib&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bugs.python.org/issue43075"&gt;BPO 43075&lt;/a&gt; to remove a possible ReDoS in &lt;code class="docutils literal"&gt;urllib&lt;/code&gt; &lt;code class="docutils literal"&gt;AbstractBasicAuthHandler&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bugs.python.org/issue43882"&gt;BPO 43882&lt;/a&gt; to sanitize urls containing ASCII newline and tabs in
&lt;code class="docutils literal"&gt;urllib.parse&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix for json-specialized dicts (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3460"&gt;3460&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Specialize &lt;code class="docutils literal"&gt;ByteBuffer.setslice&lt;/code&gt; which speeds up binary file reading by a
factor of 3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When assigning the full slice of a list, evaluate the rhs before clearing the
list (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3440"&gt;3440&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On Python2, &lt;code class="docutils literal"&gt;PyUnicode_Contains&lt;/code&gt; accepts bytes as well as unicode.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finish fixing &lt;code class="docutils literal"&gt;_sqlite3&lt;/code&gt; - untested &lt;code class="docutils literal"&gt;_reset()&lt;/code&gt; was missing an argument
(issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3432"&gt;3432&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update the packaged sqlite3 to 3.35.5 on windows. While not a bugfix, this
seems like an easy win.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We recommend updating. These fixes are the direct result of end-user bug
reports, so please continue reporting issues as they crop up.&lt;/p&gt;
&lt;p&gt;You can find links to download the v7.3.5 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;renovated blog site&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://www.pypy.org/posts/2021/05/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2021/05/project-ideas.html"&gt;help&lt;/a&gt; with making RPython's JIT even better.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.7, and
soon 3.8. It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 32/64 bits, OpenBSD, FreeBSD)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;big- and little-endian variants of &lt;strong&gt;PPC64&lt;/strong&gt; running Linux,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy does support ARM 32 bit processors, but does not release binaries.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2021/05/pypy-v735-release.html</guid><pubDate>Sun, 23 May 2021 05:53:45 GMT</pubDate></item><item><title>PyPy v7.3.4: release of python 2.7 and 3.7</title><link>https://www.pypy.org/posts/2021/04/pypy-v734-release-of-python-27-and-37.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;section id="pypy-v7-3-4-release-of-python-2-7-and-3-7"&gt;
&lt;h2&gt;PyPy v7.3.4: release of python 2.7 and 3.7&lt;/h2&gt;
&lt;p&gt;The PyPy team is proud to release the version 7.3.4 of PyPy, which includes
two different interpreters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18+ (the &lt;code class="docutils literal"&gt;+&lt;/code&gt; is for
backported security updates)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.7,  which is an interpreter supporting the syntax and the features of
Python 3.7, including the stdlib for CPython 3.7.10. We no longer refer to
this as beta-quality as the last incompatibilities with CPython (in the
&lt;code class="docutils literal"&gt;re&lt;/code&gt; module) have been fixed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;We are no longer releasing a Python3.6 version, as we focus on updating to
Python 3.8. We have begun streaming the advances towards this goal on Saturday
evenings European time on &lt;a class="reference external" href="https://www.twitch.tv/pypyproject"&gt;https://www.twitch.tv/pypyproject&lt;/a&gt;. If Python3.6 is
important to you, please reach out as we could offer sponsored longer term
support.&lt;/p&gt;
&lt;p&gt;The two interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the other 7.3
releases. Highlights of the release include binary &lt;strong&gt;Windows 64&lt;/strong&gt; support,
faster numerical instance fields, and a preliminary HPy backend.&lt;/p&gt;
&lt;p&gt;A new contributor (Ondrej BaranoviÄ - thanks!) took us up on the challenge to get
&lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/2073#note_141389"&gt;windows 64-bit&lt;/a&gt; support.  The work has been merged and for the first time we
are releasing a 64-bit Windows binary package.&lt;/p&gt;
&lt;p&gt;The release contains the biggest change to &lt;a class="reference external" href="https://www.pypy.org/posts/2010/11/efficiently-implementing-python-objects-3838329944323946932.html"&gt;PyPy's implementation of the
instances of user-defined classes&lt;/a&gt; in many years. The optimization was
motivated by the report of performance problems running a &lt;a class="reference external" href="https://github.com/paugier/nbabel"&gt;numerical particle
emulation&lt;/a&gt;. We implemented an optimization that stores &lt;code class="docutils literal"&gt;int&lt;/code&gt; and &lt;code class="docutils literal"&gt;float&lt;/code&gt;
instance fields in an unboxed way, as long as these fields are type-stable
(meaning that the same field always stores the same type, using the principle
of &lt;a class="reference external" href="https://www.csl.cornell.edu/~cbatten/pdfs/cheng-type-freezing-cgo2020.pdf"&gt;type freezing&lt;/a&gt;). This gives significant performance improvements on
numerical pure-Python code, and other code where instances store many integers
or floating point numbers.&lt;/p&gt;
&lt;p&gt;There were also a number of optimizations for methods around strings and bytes,
following user reported performance problems. If you are unhappy with PyPy's
performance on some code of yours, please report &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/"&gt;an issue&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;A major new feature is prelminary support for the Universal mode of HPy: a
new way of writing c-extension modules to totally encapsulate &lt;code class="docutils literal"&gt;PyObject*&lt;/code&gt;.
The goal, as laid out in the &lt;a class="reference external" href="https://hpy.readthedocs.io/en/latest/"&gt;HPy documentation&lt;/a&gt; and recent &lt;a class="reference external" href="https://hpyproject.org/blog/posts/2021/03/hello-hpy/"&gt;HPy blog post&lt;/a&gt;,
is to enable a migration path
for c-extension authors who wish their code to be performant on alternative
interpreters like &lt;a class="reference external" href="https://github.com/graalvm/graalpython"&gt;GraalPython&lt;/a&gt; (written on top of the Java virtual machine),
&lt;a class="reference external" href="https://github.com/RustPython/RustPython"&gt;RustPython&lt;/a&gt;, and PyPy. Thanks to Oracle and IBM for sponsoring work on HPy.&lt;/p&gt;
&lt;p&gt;Support for the &lt;a class="reference external" href="https://vmprof.readthedocs.io/en/latest/"&gt;vmprof&lt;/a&gt; statistical profiler has been extended to ARM64 via a
built-in backend.&lt;/p&gt;
&lt;p&gt;Several issues exposed in the 7.3.3 release were fixed. Many of them came from the
great work ongoing to ship PyPy-compatible binary packages in &lt;a class="reference external" href="https://conda-forge.org/blog//2020/03/10/pypy"&gt;conda-forge&lt;/a&gt;.
A big shout out to them for taking this on.&lt;/p&gt;
&lt;p&gt;Development of PyPy takes place on &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy"&gt;https://foss.heptapod.net/pypy/pypy&lt;/a&gt;.
We have seen an increase in the number of drive-by contributors who are able to
use gitlab + mercurial to create merge requests.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; backend has been updated to version 1.14.5 and the &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; backend
to 1.14.2. We recommend using CFFI rather than C-extensions to interact with C,
and using cppyy for performant wrapping of C++ code for Python.&lt;/p&gt;
&lt;p&gt;As always, we strongly recommend updating to the latest versions. Many fixes
are the direct result of end-user bug reports, so please continue reporting
issues as they crop up.&lt;/p&gt;
&lt;p&gt;You can find links to download the v7.3.4 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;renovated blog site&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://www.pypy.org/posts/2021/04/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2021/04/project-ideas.html"&gt;help&lt;/a&gt; with making RPython's JIT even better. Since the
previous release, we have accepted contributions from 10 new contributors,
thanks for pitching in, and welcome to the project!&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a cffi / cppyy version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.7, and
soon 3.8. It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 32/64 bits, OpenBSD, FreeBSD)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;big- and little-endian variants of &lt;strong&gt;PPC64&lt;/strong&gt; running Linux,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy does support ARM 32 bit processors, but does not release binaries.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-else-is-new"&gt;
&lt;h3&gt;What else is new?&lt;/h3&gt;
&lt;p&gt;For more information about the 7.3.4 release, see the &lt;a class="reference external" href="https://doc.pypy.org/en/latest/release-v7.3.4.html#changelog"&gt;full changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please update, and continue to help us make PyPy better.&lt;/p&gt;
&lt;p&gt;Cheers,
The PyPy team&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2021/04/pypy-v734-release-of-python-27-and-37.html</guid><pubDate>Thu, 08 Apr 2021 05:53:45 GMT</pubDate></item><item><title>Mac meets Arm64</title><link>https://www.pypy.org/posts/2020/12/mac-meets-arm64-940822335619099039.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;b&gt;Looking for sponsorship&lt;/b&gt;

&lt;p&gt;Apple now ships Macs which are running on an arm64 variant machine with the
latest version of MacOS, Big Sur M1.  We are getting requests for PyPy to
support this new architecture.  Here is our position on this topic (or at least
mine, Armin Rigo's), and how you can help.&lt;/p&gt;

&lt;p&gt;Porting PyPy is harder than just re-running the compiler, because PyPy contains
a few big architecture-dependent "details", like the JIT compiler and the
foreign function interfaces (CFFI and ctypes).&lt;/p&gt;

&lt;p&gt;Fixing the JIT compiler should not be too much work: we already support arm64,
just the Linux one.  But Apple made various details different (like the calling
conventions).  A few other parts need to be fixed too, notably CFFI and ctypes,
again because of the calling conventions.&lt;/p&gt;

&lt;p&gt;Fixing that would be a reasonable amount of work.  I would do it myself for a
small amount of money.  However, the story doesn't finish here.  Obviously, the
&lt;b&gt;start&lt;/b&gt; of the story would be to get ssh access to a Big Sur M1 machine.  (If at
this point you're thinking "sure, I can give you ssh access for three months",
then please read on.)  The &lt;b&gt;next&lt;/b&gt; part of the story is that we need a machine
available long term.  It can be either a machine provided and maintained by a
third party, or alternatively a pot of money big enough to support the
acquision of a machine and ongoing work of one of us.&lt;/p&gt;

&lt;p&gt;If we go with the provided-machine solution:  What we need isn't a lot of
resources.  Our CI requires maybe 10 GB of disk space, and a few hours of CPU
per run.  It should fit into 8 GB of RAM.  We normally do a run every night but
we can certainly lower the frequency a bit if that would help.  However, we'd
ideally like some kind of assurance that you are invested into maintaining the
machine for the next 3-5 years (I guess, see below).  We had far too many
machines that disappeared after a few months.&lt;/p&gt;

&lt;p&gt;If we go with the money-supported solution: it's likely that after 3-5 years
the whole Mac base will have switched to arm64, we'll drop x86-64 support for
Mac, and we'll be back to the situation of the past where there was only one
kind of Mac machine to care about.  In the meantime, we are looking at 3-5
years of lightweight extra maintenance.  We have someone that has said he would
do it, but not for free.&lt;/p&gt;

&lt;p&gt;If either of these two solutions occurs, we'll still have, I quote, "probably
some changes in distutils-type stuff to make python happy", and then some
packaging/deployment changes to support the  "universal2" architecture, i.e.
including both versions inside a single executable (which will &lt;b&gt;not&lt;/b&gt; be just an
extra switch to clang, because the two versions need a different JIT backend
and so must be translated separately).&lt;/p&gt;

&lt;p&gt;So, now all the factors are on the table.  We won't do the minimal "just the
JIT compiler fixes" if we don't have a plan that goes farther.  Either we get
sufficient money, and maybe support, and then we can do it quickly; or PyPy
will just remain not natively available on M1 hardware for the next 3-5 years.
We are looking forward to supporting M1, and view resources contributed by
the community as a vote of confidence in assuring the future of PyPy on this
hardware.  Contact us: &lt;a href="mailto:pypy-dev@python.org"&gt;pypy-dev@python.org&lt;/a&gt;, or our private mailing
list &lt;a href="mailto:pypy-z@python.org"&gt;pypy-z@python.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Armin Rigo&lt;/p&gt;</description><guid>https://www.pypy.org/posts/2020/12/mac-meets-arm64-940822335619099039.html</guid><pubDate>Thu, 31 Dec 2020 09:53:00 GMT</pubDate></item><item><title>PyPy 7.3.3 triple release: python 3.7, 3.6, and 2.7</title><link>https://www.pypy.org/posts/2020/11/pypy-733-triple-release-python-37-36-3446596804408262749.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;p&gt;Â The PyPy team is proud to release the version 7.3.3 of PyPy, which includes
three different interpreters:
&lt;/p&gt;&lt;blockquote&gt;
&lt;div&gt;&lt;ul class="simple"&gt;&lt;li&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18 (updated from the
previous version)&lt;/li&gt;&lt;li&gt;PyPy3.6: which is an interpreter supporting the syntax and the features of
Python 3.6, including the stdlib for CPython 3.6.12 (updated from the
previous version).&lt;/li&gt;&lt;li&gt;PyPy3.7 beta: which is our second release of an interpreter supporting the
syntax and the features of Python 3.7, including the stdlib for CPython
3.7.9. We call this beta quality software, there may be issues about
compatibility with new and changed features in CPython 3.7.
Please let us know what is broken or missing. We have not implemented the
&lt;a class="reference external" href="https://docs.python.org/3/whatsnew/3.7.html#re"&gt;documented changes&lt;/a&gt; in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;re&lt;/span&gt;&lt;/code&gt; module, and a few other pieces are also
missing. For more information, see the &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/wikis/py3.7%20status"&gt;PyPy 3.7 wiki&lt;/a&gt; page&lt;/li&gt;&lt;/ul&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the 7.3
releases, but read on to find out what is new.&lt;/p&gt;
&lt;p&gt;Several issues found in the 7.3.2 release were fixed. Many of them came from the
great work by &lt;a class="reference external" href="https://conda-forge.org/blog//2020/03/10/pypy"&gt;conda-forge&lt;/a&gt; to ship PyPy binary packages.  A big shout out
to them for taking this on.&lt;/p&gt;
&lt;p&gt;Development of PyPy has moved to &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy"&gt;https://foss.heptapod.net/pypy/pypy&lt;/a&gt;.
This was covered more extensively in this &lt;a class="reference external" href="https://morepypy.blogspot.com/2020/02/pypy-and-cffi-have-moved-to-heptapod.html"&gt;blog post&lt;/a&gt;. We have seen an
increase in the number of drive-by contributors who are able to use gitlab +
mercurial to create merge requests.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; backend has been updated to version 1.14.3. We recommend using CFFI
rather than c-extensions to interact with C, and using &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; for performant
wrapping of C++ code for Python.&lt;/p&gt;
&lt;p&gt;A new contributor took us up on the challenge to get &lt;a href="https://doc.pypy.org/en/latest/windows.html#what-is-missing-for-a-full-64-bit-translation"&gt;windows 64-bit&lt;/a&gt; support.
The work is proceeding on the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;win64&lt;/span&gt;&lt;/code&gt; branch, more help in coding or
sponsorship is welcome. In anticipation of merging this large change, we fixed
many test failures on windows.&lt;/p&gt;
&lt;p&gt;As always, this release fixed several issues and bugs.  We strongly recommend
updating. Many of the fixes are the direct result of end-user bug reports, so
please continue reporting issues as they crop up.&lt;/p&gt;
&lt;p&gt;You can find links to download the v7.3.3 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our &lt;a href="https://opencollective.com/pypy"&gt;donors&lt;/a&gt; for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work.&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://doc.pypy.org/en/latest/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on pypy, or general &lt;a class="reference external" href="https://doc.pypy.org/en/latest/project-ideas.html"&gt;help&lt;/a&gt; with making RPythonâs JIT even better. Since the
previous release, we have accepted contributions from 2 new contributors,
thanks for pitching in.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use c-extensions, please consider
making a cffi / cppyy version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;h2 style="text-align: center;"&gt;&lt;span style="font-size: x-large;"&gt;What is PyPy?&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.6, and
3.7. Itâs fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;ul class="simple"&gt;&lt;li&gt;&lt;b&gt;x86&lt;/b&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 32 bits, OpenBSD, FreeBSD)&lt;/li&gt;&lt;li&gt;big- and little-endian variants of &lt;b&gt;PPC64&lt;/b&gt; running Linux,&lt;/li&gt;&lt;li&gt;&lt;b&gt;s390x&lt;/b&gt; running Linux&lt;/li&gt;&lt;li&gt;64-bit &lt;b&gt;ARM&lt;/b&gt; machines running Linux.&lt;/li&gt;&lt;/ul&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;PyPy does support ARM 32 bit processors, but does not release binaries.&lt;/p&gt;&lt;p&gt;Â &lt;/p&gt;&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What else is new?&lt;/span&gt;&lt;/h2&gt;
For more information about the 7.3.3 release, see the full &lt;a href="https://doc.pypy.org/en/latest/release-v7.3.3.html"&gt;changelog&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
Please update, and continue to help us make PyPy better.&lt;br&gt;
&lt;br&gt;
Cheers,&lt;br&gt;
The PyPy team
&lt;p&gt;Â &lt;/p&gt;
&lt;/div&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2020/11/pypy-733-triple-release-python-37-36-3446596804408262749.html</guid><pubDate>Sat, 21 Nov 2020 19:32:00 GMT</pubDate></item><item><title>PyPy 7.3.2 triple release: python 2.7, 3.6, and 3.7</title><link>https://www.pypy.org/posts/2020/09/pypy-732-triple-release-python-27-36-3980901335490872787.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;p&gt;Â &lt;/p&gt;&lt;div style="text-align: left;"&gt;The PyPy team is proud to release version 7.3.2 of PyPy, which includes
three different interpreters:
&lt;/div&gt;&lt;blockquote&gt;
&lt;/blockquote&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.13&lt;/li&gt;&lt;li&gt;PyPy3.6: which is an interpreter supporting the syntax and the features of
Python 3.6, including the stdlib for CPython 3.6.9.&lt;/li&gt;&lt;li&gt;PyPy3.7 alpha: which is our first release of an interpreter supporting the
syntax and the features of Python 3.7, including the stdlib for CPython
3.7.9. We call this an alpha release since it is our first. It is based off PyPy 3.6 so
issues should be around compatibility and not stability. Please try it out
and let us know what is broken or missing. We have not implemented some of the
&lt;a class="reference external" href="https://docs.python.org/3/whatsnew/3.7.html#re"&gt;documented changes&lt;/a&gt; in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;re&lt;/span&gt;&lt;/code&gt; module, and other pieces are also
missing. For more information, see the &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/wikis/py3.7%20status"&gt;PyPy 3.7 wiki&lt;/a&gt; page&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the 7.3.0 (Dec
2019) and 7.3.1 (April 2020) releases, but read on to find out what is new.&lt;/p&gt;
&lt;p&gt;Conda Forge now &lt;a class="reference external" href="https://conda-forge.org/blog//2020/03/10/pypy"&gt;supports PyPy&lt;/a&gt; as a python interpreter. The support is quite
complete for linux and macOS. This is the result of a lot of
hard work and good will on the part of the Conda Forge team.  A big shout out
to them for taking this on.&lt;/p&gt;
&lt;p&gt;Development of PyPy has transitioning to &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy"&gt;https://foss.heptapod.net/pypy/pypy&lt;/a&gt;.
This move was covered more extensively in this &lt;a class="reference external" href="https://morepypy.blogspot.com/2020/02/pypy-and-cffi-have-moved-to-heptapod.html"&gt;blog post&lt;/a&gt;. We have seen an
increase in the number of drive-by contributors who are able to use gitlab +
mercurial to create merge requests.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; backend has been updated to version 1.14.2. We recommend using CFFI
rather than c-extensions to interact with C, and using &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; for performant
wrapping of C++ code for Python.&lt;/p&gt;
&lt;p&gt;NumPy has begun shipping wheels on PyPI for PyPy, currently for linux 64-bit
only.  Wheels for PyPy windows will be available from the next NumPy release. Thanks to NumPy for their support.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;A new contributor took us up on the challenge to get windows 64-bit support.
The work is proceeding on the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;win64&lt;/span&gt;&lt;/code&gt; branch, more help in coding or
sponsorship is welcome.&lt;/p&gt;
&lt;p&gt;As always, this release fixed several issues and bugs.  We strongly recommend
updating. Many of the fixes are the direct result of end-user bug reports, so
please continue reporting issues as they crop up.&lt;/p&gt;&lt;p&gt;You can find links to download the v7.3.2 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. Please help support us at &lt;a href="https://opencollective.com/pypy#section-contribute" target="_blank"&gt;Open Collective&lt;/a&gt;. If PyPy is not yet good enough for your needs, we are available for
direct consulting work.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://doc.pypy.org/en/latest/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on pypy, or general &lt;a class="reference external" href="https://doc.pypy.org/en/latest/project-ideas.html"&gt;help&lt;/a&gt; with making RPythonâs JIT even better. Since the
previous release, we have accepted contributions from 8 new contributors,
thanks for pitching in.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use c-extensions, please consider
making a cffi / cppyy version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;h2 style="text-align: center;"&gt;What is PyPy?&lt;/h2&gt;
&lt;p&gt;PyPy is a very compliant Python interpreter, almost a drop-in replacement for
CPython 2.7, 3.6, and 3.7. Itâs fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 2.7.x&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;ul class="simple"&gt;&lt;li&gt;&lt;b&gt;x86&lt;/b&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 32 bits, OpenBSD, FreeBSD)&lt;/li&gt;&lt;li&gt;big- and little-endian variants of &lt;b&gt;PPC64&lt;/b&gt; running Linux,&lt;/li&gt;&lt;li&gt;&lt;b&gt;s390x&lt;/b&gt; running Linux&lt;/li&gt;&lt;li&gt;64-bit &lt;b&gt;ARM&lt;/b&gt; machines running Linux.&lt;/li&gt;&lt;/ul&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;PyPy does support ARM 32 bit processors, but does not release binaries.&lt;/p&gt;
&lt;/div&gt;

&lt;div class="section" id="changelog"&gt;
&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What else is new?&lt;/span&gt;&lt;/h2&gt;
For more information about the 7.3.2 release, see the full &lt;a href="https://pypy.readthedocs.io/en/latest/release-v7.3.2.html"&gt;changelog&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
Please update, and continue to help us make PyPy better.&lt;br&gt;
&lt;br&gt;
Cheers,&lt;br&gt;
The PyPy team
&lt;/div&gt;
&lt;p&gt;Â &lt;/p&gt;&lt;p&gt;Â &lt;/p&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2020/09/pypy-732-triple-release-python-27-36-3980901335490872787.html</guid><pubDate>Fri, 25 Sep 2020 06:45:00 GMT</pubDate></item><item><title>PyPy is on Open Collective</title><link>https://www.pypy.org/posts/2020/08/pypy-is-on-open-collective-5673322428814364737.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;p&gt;Hi all,&lt;/p&gt;

&lt;p&gt;PyPy is now a &lt;a href="https://opencollective.com/pypy"&gt;member of Open Collective&lt;/a&gt;, a fiscal host.  We have been thinking about switching to this organization for a couple of years; we like it for various reasons, like the budget transparency and the lightweight touch.  We can now officially announce our membership!&lt;/p&gt;

&lt;p&gt;With this, we are now again free to use PyPy for all financial issues, like receiving funds professionally, paying parts of sprint budgets as we like, and so on.  We will shortly be reintroducing buttons that link to Open Collective from the PyPy web site.&lt;/p&gt;

&lt;p&gt;Although the old donation buttons were removed last year, we believe that there are still a few people that send regularly money to the SFC, the not-for-profit charity we were affiliated with.  If you do, please stop doing it now (and, if you like to do so, please set up an equivalent donation to &lt;a href="https://opencollective.com/pypy"&gt;PyPy on Open Collective&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;And by the way, sorry for all of you who were getting mixed feelings from the previous blog post (co-written with the SFC).  &lt;b&gt;PyPy is committed to continue being Open Source just like before.&lt;/b&gt;  This was never in question.  What these two blog posts mean is only that we switched to a different organization for our internal finances.&lt;/p&gt;

&lt;p&gt;We're looking forward to how this new relationship will go!&lt;/p&gt;

&lt;p&gt;Armin Rigo, for the PyPy team&lt;/p&gt;</description><guid>https://www.pypy.org/posts/2020/08/pypy-is-on-open-collective-5673322428814364737.html</guid><pubDate>Sat, 29 Aug 2020 11:53:00 GMT</pubDate></item><item><title>A new chapter for PyPy</title><link>https://www.pypy.org/posts/2020/08/a-new-chapter-for-pypy-8388322709667328389.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;p&gt;&lt;i&gt;PyPy winds down its membership in the Software Freedom Conservancy&lt;/i&gt;&lt;/p&gt;

&lt;h1&gt;Conservancy and PyPy's great work together&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://pypy.org/"&gt;PyPy&lt;/a&gt; joined &lt;a href="https://sfconservancy.org/"&gt;Conservancy&lt;/a&gt; in
the &lt;a href="https://sfconservancy.org/blog/2011/jan/02/oct-dec-2010/"&gt;second half of 2010&lt;/a&gt;, shortly after the release of
PyPy 1.2, the first version to contain a fully functional JIT. &lt;a href="https://lwn.net/Articles/550427/"&gt;In 2013&lt;/a&gt;, PyPy
started supporting ARM, bringing its just-in-time speediness to many more devices and began working toward supporting NumPy to help
scientists crunch their numbers faster. Together, PyPy and Conservancy ran successful fundraising drives and facilitated payment
and oversight for &lt;a href="https://sfconservancy.org/blog/2016/dec/01/pypy-2016/"&gt;contractors and code sprints&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Conservancy supported PyPy's impressive growth as it expanded support for
different hardware platforms, greatly improved the performance of C extensions,
and added support for Python 3 as the language itself evolved.&lt;/p&gt;

&lt;h1&gt;The road ahead&lt;/h1&gt;
  
&lt;p&gt;Conservancy provides a fiscal and organizational home for projects that find the
freedoms and guardrails that come along with a charitable home advantageous for
their community goals. While this framework was a great fit for the early PyPy
community, times change and all good things must come to an end.&lt;/p&gt;

&lt;p&gt;PyPy will remain a free and open source project, but the community's structure
and organizational underpinnings will be changing and the PyPy community will be
exploring options outside of the charitable realm for its next phase of growth
("charitable" in the legal sense -- PyPy will remain a community project).&lt;/p&gt;

&lt;p&gt;During the last year PyPy and Conservancy have worked together to properly
utilise the generous donations made by stalwart PyPy enthusiats over the years
and to wrap up PyPy's remaining charitable obligations. PyPy is grateful for
the Conservancy's help in shepherding the project toward its next chapter.&lt;/p&gt;

&lt;h1&gt;Thank yous&lt;/h1&gt;&lt;p&gt;From Conservancy: &lt;br&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;/p&gt;&lt;blockquote&gt;"We are happy that Conservancy was able to help PyPy bring important software
for the public good during a critical time in its history. We wish the
community well and look forward to seeing it develop and succeed in new ways." &lt;br&gt;&lt;/blockquote&gt;&lt;blockquote&gt;â Karen Sandler, Conservancy's Executive Director&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;From PyPy:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;div style="text-align: left;"&gt;&lt;div style="text-align: left;"&gt;&lt;blockquote&gt;&lt;p&gt;"PyPy would like to thank Conservancy for their decade long support in
building the community and wishes Conservancy continued success in their
journey promoting, improving, developing and defending free and open source
sofware." &lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p style="text-align: left;"&gt;â Simon Cross &amp;amp; Carl Friedrich Bolz-Tereick, on behalf of PyPy.&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;
&lt;/blockquote&gt;

&lt;h1&gt;About&lt;/h1&gt;

&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/"&gt;PyPy&lt;/a&gt; is a multi-layer python interpreter with a built-in JIT compiler that runs
Python quickly across different computing environments.
&lt;a class="reference external" href="https://sfconservancy.org/"&gt;Software Freedom Conservancy&lt;/a&gt; (Conservancy) is a charity that provides a home
to over forty free and open source software projects.&lt;/p&gt;</description><category>pypy</category><guid>https://www.pypy.org/posts/2020/08/a-new-chapter-for-pypy-8388322709667328389.html</guid><pubDate>Wed, 12 Aug 2020 19:00:00 GMT</pubDate></item><item><title>PyPy 7.3.1 released</title><link>https://www.pypy.org/posts/2020/04/pypy-731-released-6266451647387657480.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;div dir="ltr" style="text-align: left;"&gt;
The PyPy team is proud to release the version 7.3.1 of PyPy, which includes
two different interpreters:&lt;br&gt;

&lt;blockquote&gt;
&lt;div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.13&lt;/li&gt;
&lt;li&gt;PyPy3.6: which is an interpreter supporting the syntax and the features of
Python 3.6, including the stdlib for CPython 3.6.9.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, no APIs have changed since the 7.3.0 release
in December, but read on to find out what is new.&lt;br&gt;

&lt;br&gt;
Conda Forge now &lt;a class="reference external" href="https://conda-forge.org/blog//2020/03/10/pypy"&gt;supports PyPy&lt;/a&gt; as a Python interpreter. The support right now
is being built out. After this release, many more c-extension-based
packages can be successfully built and uploaded. This is the result of a lot of
hard work and good will on the part of the Conda Forge team.  A big shout out
to them for taking this on.&lt;br&gt;

&lt;br&gt;
We have worked with the Python packaging group to support tooling around
building third party packages for Python, so this release updates the pip and
setuptools installed when executing &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pypy&lt;/span&gt; &lt;span class="pre"&gt;-mensurepip&lt;/span&gt;&lt;/code&gt; to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pip&amp;gt;=20&lt;/span&gt;&lt;/code&gt;. This
completes the work done to update the PEP 425 &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0425/#python-tag"&gt;python tag&lt;/a&gt; from &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pp373&lt;/span&gt;&lt;/code&gt; to
mean âPyPy 7.3 running python3â to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pp36&lt;/span&gt;&lt;/code&gt; meaning âPyPy running Python
3.6â (the format is recommended in the PEP). The tag itself was
changed in 7.3.0, but older pip versions build their own tag without querying
PyPy. This means that wheels built for the previous tag format will not be
discovered by pip from this version, so library authors should update their
PyPy-specific wheels on PyPI.&lt;br&gt;

&lt;br&gt;
Development of PyPy is transitioning to &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy"&gt;https://foss.heptapod.net/pypy/pypy&lt;/a&gt;.
This move was covered more extensively in the &lt;a class="reference external" href="https://morepypy.blogspot.com/2020/02/pypy-and-cffi-have-moved-to-heptapod.html"&gt;blog post&lt;/a&gt; from last month.&lt;br&gt;

&lt;br&gt;
The &lt;a class="reference external" href="https://cffi.readthedocs.io/"&gt;CFFI&lt;/a&gt; backend has been updated to version 14.0. We recommend using CFFI
rather than c-extensions to interact with C, and using &lt;a class="reference external" href="https://cppyy.readthedocs.io/"&gt;cppyy&lt;/a&gt; for performant
wrapping of C++ code for Python. The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;cppyy&lt;/span&gt;&lt;/code&gt; backend has been enabled
experimentally for win32, try it out and let use know how it works.&lt;br&gt;

&lt;br&gt;
Enabling &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;cppyy&lt;/span&gt;&lt;/code&gt; requires a more modern C compiler, so win32 is now built
with MSVC160 (Visual Studio 2019). This is true for PyPy 3.6 as well as for 2.7.&lt;br&gt;

&lt;br&gt;
We have improved warmup time by up to 20%, performance of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;io.StringIO&lt;/span&gt;&lt;/code&gt; to
match if not be faster than CPython, and improved JIT code generation for
generators (and generator expressions in particular) when passing them to
functions like &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;sum&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;map&lt;/span&gt;&lt;/code&gt;, and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;map&lt;/span&gt;&lt;/code&gt; that consume them. Performance of closures has also be improved in certain situations.&lt;br&gt;

&lt;br&gt;
As always, this release fixed several issues and bugs raised by the growing
community of PyPy users.  We strongly recommend updating. Many of the fixes are
the direct result of end-user bug reports, so please continue reporting issues
as they crop up.&lt;br&gt;

You can find links to download the v7.3.1 releases here:&lt;br&gt;

&lt;blockquote&gt;
&lt;div&gt;
&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/div&gt;
&lt;/blockquote&gt;
We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work.&lt;br&gt;

&lt;br&gt;
We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://doc.pypy.org/en/latest/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org/"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://doc.pypy.org/en/latest/project-ideas.html"&gt;help&lt;/a&gt; with making RPythonâs JIT even better. Since the
previous release, we have accepted contributions from 13 new contributors,
thanks for pitching in.&lt;br&gt;

&lt;br&gt;
If you are a Python library maintainer and use c-extensions, please consider
making a cffi / cppyy version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy wheels.&lt;br&gt;


&lt;div class="section" id="what-is-pypy"&gt;
&lt;h2 style="text-align: center;"&gt;
Â &lt;/h2&gt;
&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What is PyPy?&lt;/span&gt;&lt;/h2&gt;
PyPy is a very compliant Python interpreter, almost a drop-in replacement for
CPython 2.7, 3.6, and soon 3.7. Itâs fast (&lt;a class="reference external" href="https://speed.pypy.org/"&gt;PyPy and CPython 2.7.x&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;br&gt;

&lt;br&gt;
We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;br&gt;

&lt;br&gt;
This PyPy release supports:&lt;br&gt;

&lt;blockquote&gt;
&lt;div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 32 bits, OpenBSD, FreeBSD)&lt;/li&gt;
&lt;li&gt;big- and little-endian variants of &lt;strong&gt;PPC64&lt;/strong&gt; running Linux,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/li&gt;
&lt;li&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;div class="section" id="changelog"&gt;
&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What else is new?&lt;/span&gt;&lt;/h2&gt;
For more information about the 7.3.1 release, see the full &lt;a href="https://pypy.readthedocs.io/en/latest/release-v7.3.1.html"&gt;changelog&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
Please update, and continue to help us make PyPy better.&lt;br&gt;
&lt;br&gt;
Cheers,&lt;br&gt;
The PyPy team
&lt;/div&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;
The PyPy TeamÂ  &lt;br&gt;

&lt;/div&gt;
&lt;/div&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2020/04/pypy-731-released-6266451647387657480.html</guid><pubDate>Fri, 10 Apr 2020 14:29:00 GMT</pubDate></item></channel></rss>