<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PyPy (Posts about release)</title><link>https://www.pypy.org/</link><description></description><atom:link href="https://www.pypy.org/categories/release.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2021 &lt;a href="mailto:pypy-dev@pypy.org"&gt;The PyPy Team&lt;/a&gt; </copyright><lastBuildDate>Sun, 07 Nov 2021 15:32:24 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>PyPy v7.3.7: bugfix release of python 3.7 and 3.8</title><link>https://www.pypy.org/posts/2021/10/pypy-v737-release.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;section id="pypy-v7-3-7-bug-fix-release-of-3-7-3-8"&gt;
&lt;h2&gt;PyPy v7.3.7: bug-fix release of 3.7, 3.8&lt;/h2&gt;
&lt;p&gt;We are releasing a PyPy 7.3.7 to fix the recent 7.3.6 release's binary
incompatibility with the previous 7.3.x releases. We mistakenly added fields
to &lt;code class="docutils literal"&gt;PyFrameObject&lt;/code&gt; and &lt;code class="docutils literal"&gt;PyDateTime_CAPI&lt;/code&gt; that broke the promise of binary
compatibility, which means that c-extension wheels compiled for 7.3.5 will not
work with 7.3.6 and via-versa. Please do not use 7.3.6.&lt;/p&gt;
&lt;p&gt;We have added a cursory test for binary API breakage to the
&lt;a class="reference external" href="https://github.com/pypy/binary-testing"&gt;https://github.com/pypy/binary-testing&lt;/a&gt; repo which hopefully will prevent such
mistakes in the future.&lt;/p&gt;
&lt;p&gt;Additionally, a few smaller bugs were fixed:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code class="docutils literal"&gt;uint&lt;/code&gt; for the &lt;code class="docutils literal"&gt;request&lt;/code&gt; argument of &lt;code class="docutils literal"&gt;fcntl.ioctl&lt;/code&gt; (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3568"&gt;3568&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix incorrect tracing of &lt;cite&gt;while True`&lt;/cite&gt; body in 3.8 (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3577"&gt;3577&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Properly close resources when using a &lt;code class="docutils literal"&gt;conncurrent.futures.ProcessPool&lt;/code&gt;
(issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3317"&gt;3317&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix the value of &lt;code class="docutils literal"&gt;LIBDIR&lt;/code&gt; in &lt;code class="docutils literal"&gt;_sysconfigdata&lt;/code&gt; in 3.8 (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3582"&gt;3582&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find links to download the v7.3.7 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;blog site&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://www.pypy.org/posts/2021/10/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2021/10/project-ideas.html"&gt;help&lt;/a&gt; with making RPython's JIT even better.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.7, and
3.8. It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 64 bits, OpenBSD, FreeBSD)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy does support ARM 32 bit and PPC64 processors, but does not release binaries.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2021/10/pypy-v737-release.html</guid><pubDate>Mon, 25 Oct 2021 05:53:45 GMT</pubDate></item><item><title>PyPy v7.3.6: release of python 2.7, 3.7, and 3.8</title><link>https://www.pypy.org/posts/2021/10/pypy-v736-release.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;section id="pypy-v7-3-6-release-of-python-2-7-3-7-and-3-8-beta"&gt;
&lt;h2&gt;PyPy v7.3.6: release of python 2.7, 3.7, and 3.8-beta&lt;/h2&gt;
&lt;p&gt;The PyPy team is proud to release version 7.3.6 of PyPy, which includes
three different interpreters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18+ (the &lt;code class="docutils literal"&gt;+&lt;/code&gt; is for
backported security updates)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.7,  which is an interpreter supporting the syntax and the features of
Python 3.7, including the stdlib for CPython 3.7.12.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.8, which is an interpreter supporting the syntax and the features of
Python 3.8, including the stdlib for CPython 3.8.12. Since this is our
first release of the interpreter, we relate to this as "beta" quality. We
welcome testing of this version, if you discover incompatibilites, please
report them so we can gain confidence in the version.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the other 7.3
releases. Highlights of the release, since the release of 7.3.5 in May 2021,
include:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;We have merged a backend for &lt;a class="reference external" href="https://hpyproject.org/"&gt;HPy&lt;/a&gt;, the better C-API interface. The backend
implements HPy version 0.0.3.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Translation of PyPy into a binary, known to be slow, is now about 40%
faster. On a modern machine, PyPy3.8 can translate in about 20 minutes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy Windows 64 is now available on &lt;a class="reference external" href="https://conda-forge.org/blog//2020/03/10/pypy"&gt;conda-forge&lt;/a&gt;, along with nearly 700
commonly used binary packages. This new offering joins the more than 1000
conda packages for PyPy on Linux and macOS. Many thanks to the conda-forge
maintainers for pushing this forward over the past 18 months.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Speed improvements were made to &lt;code class="docutils literal"&gt;io&lt;/code&gt;, &lt;code class="docutils literal"&gt;sum&lt;/code&gt;, &lt;code class="docutils literal"&gt;_ssl&lt;/code&gt; and more. These
were done in response to user feedback.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The 3.8 version of the release contains a beta-quality improvement to the
JIT to better support &lt;a class="reference external" href="https://www.pypy.org/posts/2021/09/jit-auto-generated-code.html"&gt;compiling huge Python functions&lt;/a&gt; by breaking them
up into smaller pieces.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The release of Python3.8 required a concerted effort. We were greatly
helped by @isidentical (Batuhan Taskaya) and other new contributors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The 3.8 package now uses the same layout as CPython, and many of the
PyPy-specific changes to &lt;code class="docutils literal"&gt;sysconfig&lt;/code&gt;, &lt;code class="docutils literal"&gt;distutils.sysconfig&lt;/code&gt;, and
&lt;code class="docutils literal"&gt;distutils.commands.install.py&lt;/code&gt; have been removed. The &lt;code class="docutils literal"&gt;stdlib&lt;/code&gt; now
is located in &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;base&amp;gt;/lib/pypy3.8&lt;/span&gt;&lt;/code&gt; on &lt;code class="docutils literal"&gt;posix&lt;/code&gt; systems, and in
&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;base&amp;gt;/Lib&lt;/span&gt;&lt;/code&gt; on Windows. The include files on windows remain the same.
On &lt;code class="docutils literal"&gt;posix&lt;/code&gt; they are in &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;base&amp;gt;/include/pypy3.8&lt;/span&gt;&lt;/code&gt;. Note we still use the
&lt;code class="docutils literal"&gt;pypy&lt;/code&gt; prefix to prevent mixing the files with CPython (which uses
&lt;code class="docutils literal"&gt;python&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;We recommend updating. You can find links to download the v7.3.6 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;blog&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://pypy.org"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://doc.pypy.org/en/latest/project-ideas.html"&gt;help&lt;/a&gt; with making RPython's JIT even better. Since the
previous release, we have accepted contributions from 7 new contributors,
thanks for pitching in, and welcome to the project!&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.7, and
soon 3.8. It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 64 bits, OpenBSD, FreeBSD)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;big- and little-endian variants of &lt;strong&gt;PPC64&lt;/strong&gt; running Linux,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy does support Windows 32-bit and ARM 32 bit processors, but does not
release binaries. Please reach out to us if you wish to sponsor releases for
those platforms.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-else-is-new"&gt;
&lt;h3&gt;What else is new?&lt;/h3&gt;
&lt;p&gt;For more information about the 7.3.6 release, see the &lt;a class="reference external" href="https://doc.pypy.org/en/latest/release-v7.3.6.html#changelog"&gt;full changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please update, and continue to help us make PyPy better.&lt;/p&gt;
&lt;p&gt;Cheers,
The PyPy team&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2021/10/pypy-v736-release.html</guid><pubDate>Sun, 17 Oct 2021 05:53:45 GMT</pubDate></item><item><title>PyPy v7.3.5: bugfix release of python 2.7 and 3.7</title><link>https://www.pypy.org/posts/2021/05/pypy-v735-release.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;section id="pypy-v7-3-5-release-of-2-7-and-3-7"&gt;
&lt;h2&gt;PyPy v7.3.5: release of 2.7 and 3.7&lt;/h2&gt;
&lt;p&gt;We are releasing a PyPy 7.3.5 with bugfixes for PyPy 7.3.4, released April 4.
PyPy 7.3.4 was the first release that runs on windows 64-bit, so that support
is still "beta". We are releasing it in the hopes that we can garner momentum
for its continued support, but are already aware of some problems, for instance
it errors in the NumPy test suite (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3462"&gt;3462&lt;/a&gt;). Please help out with testing
the releae and reporting successes and failures, financially supporting our
ongoing work, and helping us find the source of these problems.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;The new windows 64-bit builds improperly named c-extension modules
with the same extension as the 32-bit build (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3443"&gt;3443&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the windows-specific &lt;code class="docutils literal"&gt;PC/pyconfig.h&lt;/code&gt; rather than the posix one&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix the return type for &lt;code class="docutils literal"&gt;_Py_HashDouble&lt;/code&gt; which impacts 64-bit windows&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A change to the python 3.7 &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;sysconfig.get_config_var('LIBDIR')&lt;/span&gt;&lt;/code&gt; was wrong,
leading to problems finding &lt;cite&gt;libpypy3-c.so&lt;/cite&gt; for embedded PyPy (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3442"&gt;3442&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instantiate &lt;code class="docutils literal"&gt;distutils.command.install&lt;/code&gt; schema for PyPy-specific
&lt;code class="docutils literal"&gt;implementation_lower&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Delay thread-checking logic in greenlets until the thread is actually started
(continuation of issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3441"&gt;3441&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Four upstream (CPython) security patches were applied:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bugs.python.org/issue42988"&gt;BPO 42988&lt;/a&gt; to remove &lt;code class="docutils literal"&gt;pydoc.getfile&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bugs.python.org/issue43285"&gt;BPO 43285&lt;/a&gt; to not trust the &lt;code class="docutils literal"&gt;PASV&lt;/code&gt; response in &lt;code class="docutils literal"&gt;ftplib&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bugs.python.org/issue43075"&gt;BPO 43075&lt;/a&gt; to remove a possible ReDoS in &lt;code class="docutils literal"&gt;urllib&lt;/code&gt; &lt;code class="docutils literal"&gt;AbstractBasicAuthHandler&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://bugs.python.org/issue43882"&gt;BPO 43882&lt;/a&gt; to sanitize urls containing ASCII newline and tabs in
&lt;code class="docutils literal"&gt;urllib.parse&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix for json-specialized dicts (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3460"&gt;3460&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Specialize &lt;code class="docutils literal"&gt;ByteBuffer.setslice&lt;/code&gt; which speeds up binary file reading by a
factor of 3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When assigning the full slice of a list, evaluate the rhs before clearing the
list (issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3440"&gt;3440&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On Python2, &lt;code class="docutils literal"&gt;PyUnicode_Contains&lt;/code&gt; accepts bytes as well as unicode.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finish fixing &lt;code class="docutils literal"&gt;_sqlite3&lt;/code&gt; - untested &lt;code class="docutils literal"&gt;_reset()&lt;/code&gt; was missing an argument
(issue &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/3432"&gt;3432&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update the packaged sqlite3 to 3.35.5 on windows. While not a bugfix, this
seems like an easy win.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We recommend updating. These fixes are the direct result of end-user bug
reports, so please continue reporting issues as they crop up.&lt;/p&gt;
&lt;p&gt;You can find links to download the v7.3.5 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;renovated blog site&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://www.pypy.org/posts/2021/05/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2021/05/project-ideas.html"&gt;help&lt;/a&gt; with making RPython's JIT even better.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; / &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.7, and
soon 3.8. It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 32/64 bits, OpenBSD, FreeBSD)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;big- and little-endian variants of &lt;strong&gt;PPC64&lt;/strong&gt; running Linux,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy does support ARM 32 bit processors, but does not release binaries.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2021/05/pypy-v735-release.html</guid><pubDate>Sun, 23 May 2021 05:53:45 GMT</pubDate></item><item><title>PyPy v7.3.4: release of python 2.7 and 3.7</title><link>https://www.pypy.org/posts/2021/04/pypy-v734-release-of-python-27-and-37.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;section id="pypy-v7-3-4-release-of-python-2-7-and-3-7"&gt;
&lt;h2&gt;PyPy v7.3.4: release of python 2.7 and 3.7&lt;/h2&gt;
&lt;p&gt;The PyPy team is proud to release the version 7.3.4 of PyPy, which includes
two different interpreters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18+ (the &lt;code class="docutils literal"&gt;+&lt;/code&gt; is for
backported security updates)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyPy3.7,  which is an interpreter supporting the syntax and the features of
Python 3.7, including the stdlib for CPython 3.7.10. We no longer refer to
this as beta-quality as the last incompatibilities with CPython (in the
&lt;code class="docutils literal"&gt;re&lt;/code&gt; module) have been fixed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;We are no longer releasing a Python3.6 version, as we focus on updating to
Python 3.8. We have begun streaming the advances towards this goal on Saturday
evenings European time on &lt;a class="reference external" href="https://www.twitch.tv/pypyproject"&gt;https://www.twitch.tv/pypyproject&lt;/a&gt;. If Python3.6 is
important to you, please reach out as we could offer sponsored longer term
support.&lt;/p&gt;
&lt;p&gt;The two interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the other 7.3
releases. Highlights of the release include binary &lt;strong&gt;Windows 64&lt;/strong&gt; support,
faster numerical instance fields, and a preliminary HPy backend.&lt;/p&gt;
&lt;p&gt;A new contributor (Ondrej BaranoviÄ - thanks!) took us up on the challenge to get
&lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/2073#note_141389"&gt;windows 64-bit&lt;/a&gt; support.  The work has been merged and for the first time we
are releasing a 64-bit Windows binary package.&lt;/p&gt;
&lt;p&gt;The release contains the biggest change to &lt;a class="reference external" href="https://www.pypy.org/posts/2010/11/efficiently-implementing-python-objects-3838329944323946932.html"&gt;PyPy's implementation of the
instances of user-defined classes&lt;/a&gt; in many years. The optimization was
motivated by the report of performance problems running a &lt;a class="reference external" href="https://github.com/paugier/nbabel"&gt;numerical particle
emulation&lt;/a&gt;. We implemented an optimization that stores &lt;code class="docutils literal"&gt;int&lt;/code&gt; and &lt;code class="docutils literal"&gt;float&lt;/code&gt;
instance fields in an unboxed way, as long as these fields are type-stable
(meaning that the same field always stores the same type, using the principle
of &lt;a class="reference external" href="https://www.csl.cornell.edu/~cbatten/pdfs/cheng-type-freezing-cgo2020.pdf"&gt;type freezing&lt;/a&gt;). This gives significant performance improvements on
numerical pure-Python code, and other code where instances store many integers
or floating point numbers.&lt;/p&gt;
&lt;p&gt;There were also a number of optimizations for methods around strings and bytes,
following user reported performance problems. If you are unhappy with PyPy's
performance on some code of yours, please report &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/issues/"&gt;an issue&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;A major new feature is prelminary support for the Universal mode of HPy: a
new way of writing c-extension modules to totally encapsulate &lt;code class="docutils literal"&gt;PyObject*&lt;/code&gt;.
The goal, as laid out in the &lt;a class="reference external" href="https://hpy.readthedocs.io/en/latest/"&gt;HPy documentation&lt;/a&gt; and recent &lt;a class="reference external" href="https://hpyproject.org/blog/posts/2021/03/hello-hpy/"&gt;HPy blog post&lt;/a&gt;,
is to enable a migration path
for c-extension authors who wish their code to be performant on alternative
interpreters like &lt;a class="reference external" href="https://github.com/graalvm/graalpython"&gt;GraalPython&lt;/a&gt; (written on top of the Java virtual machine),
&lt;a class="reference external" href="https://github.com/RustPython/RustPython"&gt;RustPython&lt;/a&gt;, and PyPy. Thanks to Oracle and IBM for sponsoring work on HPy.&lt;/p&gt;
&lt;p&gt;Support for the &lt;a class="reference external" href="https://vmprof.readthedocs.io/en/latest/"&gt;vmprof&lt;/a&gt; statistical profiler has been extended to ARM64 via a
built-in backend.&lt;/p&gt;
&lt;p&gt;Several issues exposed in the 7.3.3 release were fixed. Many of them came from the
great work ongoing to ship PyPy-compatible binary packages in &lt;a class="reference external" href="https://conda-forge.org/blog//2020/03/10/pypy"&gt;conda-forge&lt;/a&gt;.
A big shout out to them for taking this on.&lt;/p&gt;
&lt;p&gt;Development of PyPy takes place on &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy"&gt;https://foss.heptapod.net/pypy/pypy&lt;/a&gt;.
We have seen an increase in the number of drive-by contributors who are able to
use gitlab + mercurial to create merge requests.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; backend has been updated to version 1.14.5 and the &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; backend
to 1.14.2. We recommend using CFFI rather than C-extensions to interact with C,
and using cppyy for performant wrapping of C++ code for Python.&lt;/p&gt;
&lt;p&gt;As always, we strongly recommend updating to the latest versions. Many fixes
are the direct result of end-user bug reports, so please continue reporting
issues as they crop up.&lt;/p&gt;
&lt;p&gt;You can find links to download the v7.3.4 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work. If PyPy is helping you out, we would love to hear about
it and encourage submissions to our &lt;a class="reference external" href="https://pypy.org/blog"&gt;renovated blog site&lt;/a&gt; via a pull request
to &lt;a class="reference external" href="https://github.com/pypy/pypy.org"&gt;https://github.com/pypy/pypy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://www.pypy.org/posts/2021/04/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://www.pypy.org/posts/2021/04/project-ideas.html"&gt;help&lt;/a&gt; with making RPython's JIT even better. Since the
previous release, we have accepted contributions from 10 new contributors,
thanks for pitching in, and welcome to the project!&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use C-extensions, please consider
making a cffi / cppyy version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;section id="what-is-pypy"&gt;
&lt;h3&gt;What is PyPy?&lt;/h3&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.7, and
soon 3.8. It's fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 32/64 bits, OpenBSD, FreeBSD)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;big- and little-endian variants of &lt;strong&gt;PPC64&lt;/strong&gt; running Linux,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;PyPy does support ARM 32 bit processors, but does not release binaries.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="what-else-is-new"&gt;
&lt;h3&gt;What else is new?&lt;/h3&gt;
&lt;p&gt;For more information about the 7.3.4 release, see the &lt;a class="reference external" href="https://doc.pypy.org/en/latest/release-v7.3.4.html#changelog"&gt;full changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please update, and continue to help us make PyPy better.&lt;/p&gt;
&lt;p&gt;Cheers,
The PyPy team&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2021/04/pypy-v734-release-of-python-27-and-37.html</guid><pubDate>Thu, 08 Apr 2021 05:53:45 GMT</pubDate></item><item><title>PyPy 7.3.3 triple release: python 3.7, 3.6, and 2.7</title><link>https://www.pypy.org/posts/2020/11/pypy-733-triple-release-python-37-36-3446596804408262749.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;p&gt;Â The PyPy team is proud to release the version 7.3.3 of PyPy, which includes
three different interpreters:
&lt;/p&gt;&lt;blockquote&gt;
&lt;div&gt;&lt;ul class="simple"&gt;&lt;li&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.18 (updated from the
previous version)&lt;/li&gt;&lt;li&gt;PyPy3.6: which is an interpreter supporting the syntax and the features of
Python 3.6, including the stdlib for CPython 3.6.12 (updated from the
previous version).&lt;/li&gt;&lt;li&gt;PyPy3.7 beta: which is our second release of an interpreter supporting the
syntax and the features of Python 3.7, including the stdlib for CPython
3.7.9. We call this beta quality software, there may be issues about
compatibility with new and changed features in CPython 3.7.
Please let us know what is broken or missing. We have not implemented the
&lt;a class="reference external" href="https://docs.python.org/3/whatsnew/3.7.html#re"&gt;documented changes&lt;/a&gt; in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;re&lt;/span&gt;&lt;/code&gt; module, and a few other pieces are also
missing. For more information, see the &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/wikis/py3.7%20status"&gt;PyPy 3.7 wiki&lt;/a&gt; page&lt;/li&gt;&lt;/ul&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the 7.3
releases, but read on to find out what is new.&lt;/p&gt;
&lt;p&gt;Several issues found in the 7.3.2 release were fixed. Many of them came from the
great work by &lt;a class="reference external" href="https://conda-forge.org/blog//2020/03/10/pypy"&gt;conda-forge&lt;/a&gt; to ship PyPy binary packages.  A big shout out
to them for taking this on.&lt;/p&gt;
&lt;p&gt;Development of PyPy has moved to &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy"&gt;https://foss.heptapod.net/pypy/pypy&lt;/a&gt;.
This was covered more extensively in this &lt;a class="reference external" href="https://morepypy.blogspot.com/2020/02/pypy-and-cffi-have-moved-to-heptapod.html"&gt;blog post&lt;/a&gt;. We have seen an
increase in the number of drive-by contributors who are able to use gitlab +
mercurial to create merge requests.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; backend has been updated to version 1.14.3. We recommend using CFFI
rather than c-extensions to interact with C, and using &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; for performant
wrapping of C++ code for Python.&lt;/p&gt;
&lt;p&gt;A new contributor took us up on the challenge to get &lt;a href="https://doc.pypy.org/en/latest/windows.html#what-is-missing-for-a-full-64-bit-translation"&gt;windows 64-bit&lt;/a&gt; support.
The work is proceeding on the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;win64&lt;/span&gt;&lt;/code&gt; branch, more help in coding or
sponsorship is welcome. In anticipation of merging this large change, we fixed
many test failures on windows.&lt;/p&gt;
&lt;p&gt;As always, this release fixed several issues and bugs.  We strongly recommend
updating. Many of the fixes are the direct result of end-user bug reports, so
please continue reporting issues as they crop up.&lt;/p&gt;
&lt;p&gt;You can find links to download the v7.3.3 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our &lt;a href="https://opencollective.com/pypy"&gt;donors&lt;/a&gt; for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work.&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://doc.pypy.org/en/latest/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on pypy, or general &lt;a class="reference external" href="https://doc.pypy.org/en/latest/project-ideas.html"&gt;help&lt;/a&gt; with making RPythonâs JIT even better. Since the
previous release, we have accepted contributions from 2 new contributors,
thanks for pitching in.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use c-extensions, please consider
making a cffi / cppyy version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;h2 style="text-align: center;"&gt;&lt;span style="font-size: x-large;"&gt;What is PyPy?&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;PyPy is a Python interpreter, a drop-in replacement for CPython 2.7, 3.6, and
3.7. Itâs fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 3.7.4&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;ul class="simple"&gt;&lt;li&gt;&lt;b&gt;x86&lt;/b&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 32 bits, OpenBSD, FreeBSD)&lt;/li&gt;&lt;li&gt;big- and little-endian variants of &lt;b&gt;PPC64&lt;/b&gt; running Linux,&lt;/li&gt;&lt;li&gt;&lt;b&gt;s390x&lt;/b&gt; running Linux&lt;/li&gt;&lt;li&gt;64-bit &lt;b&gt;ARM&lt;/b&gt; machines running Linux.&lt;/li&gt;&lt;/ul&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;PyPy does support ARM 32 bit processors, but does not release binaries.&lt;/p&gt;&lt;p&gt;Â &lt;/p&gt;&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What else is new?&lt;/span&gt;&lt;/h2&gt;
For more information about the 7.3.3 release, see the full &lt;a href="https://doc.pypy.org/en/latest/release-v7.3.3.html"&gt;changelog&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
Please update, and continue to help us make PyPy better.&lt;br&gt;
&lt;br&gt;
Cheers,&lt;br&gt;
The PyPy team
&lt;p&gt;Â &lt;/p&gt;
&lt;/div&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2020/11/pypy-733-triple-release-python-37-36-3446596804408262749.html</guid><pubDate>Sat, 21 Nov 2020 19:32:00 GMT</pubDate></item><item><title>PyPy 7.3.2 triple release: python 2.7, 3.6, and 3.7</title><link>https://www.pypy.org/posts/2020/09/pypy-732-triple-release-python-27-36-3980901335490872787.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;p&gt;Â &lt;/p&gt;&lt;div style="text-align: left;"&gt;The PyPy team is proud to release version 7.3.2 of PyPy, which includes
three different interpreters:
&lt;/div&gt;&lt;blockquote&gt;
&lt;/blockquote&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.13&lt;/li&gt;&lt;li&gt;PyPy3.6: which is an interpreter supporting the syntax and the features of
Python 3.6, including the stdlib for CPython 3.6.9.&lt;/li&gt;&lt;li&gt;PyPy3.7 alpha: which is our first release of an interpreter supporting the
syntax and the features of Python 3.7, including the stdlib for CPython
3.7.9. We call this an alpha release since it is our first. It is based off PyPy 3.6 so
issues should be around compatibility and not stability. Please try it out
and let us know what is broken or missing. We have not implemented some of the
&lt;a class="reference external" href="https://docs.python.org/3/whatsnew/3.7.html#re"&gt;documented changes&lt;/a&gt; in the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;re&lt;/span&gt;&lt;/code&gt; module, and other pieces are also
missing. For more information, see the &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy/-/wikis/py3.7%20status"&gt;PyPy 3.7 wiki&lt;/a&gt; page&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, all APIs are compatible with the 7.3.0 (Dec
2019) and 7.3.1 (April 2020) releases, but read on to find out what is new.&lt;/p&gt;
&lt;p&gt;Conda Forge now &lt;a class="reference external" href="https://conda-forge.org/blog//2020/03/10/pypy"&gt;supports PyPy&lt;/a&gt; as a python interpreter. The support is quite
complete for linux and macOS. This is the result of a lot of
hard work and good will on the part of the Conda Forge team.  A big shout out
to them for taking this on.&lt;/p&gt;
&lt;p&gt;Development of PyPy has transitioning to &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy"&gt;https://foss.heptapod.net/pypy/pypy&lt;/a&gt;.
This move was covered more extensively in this &lt;a class="reference external" href="https://morepypy.blogspot.com/2020/02/pypy-and-cffi-have-moved-to-heptapod.html"&gt;blog post&lt;/a&gt;. We have seen an
increase in the number of drive-by contributors who are able to use gitlab +
mercurial to create merge requests.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://cffi.readthedocs.io"&gt;CFFI&lt;/a&gt; backend has been updated to version 1.14.2. We recommend using CFFI
rather than c-extensions to interact with C, and using &lt;a class="reference external" href="https://cppyy.readthedocs.io"&gt;cppyy&lt;/a&gt; for performant
wrapping of C++ code for Python.&lt;/p&gt;
&lt;p&gt;NumPy has begun shipping wheels on PyPI for PyPy, currently for linux 64-bit
only.  Wheels for PyPy windows will be available from the next NumPy release. Thanks to NumPy for their support.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;A new contributor took us up on the challenge to get windows 64-bit support.
The work is proceeding on the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;win64&lt;/span&gt;&lt;/code&gt; branch, more help in coding or
sponsorship is welcome.&lt;/p&gt;
&lt;p&gt;As always, this release fixed several issues and bugs.  We strongly recommend
updating. Many of the fixes are the direct result of end-user bug reports, so
please continue reporting issues as they crop up.&lt;/p&gt;&lt;p&gt;You can find links to download the v7.3.2 releases here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;We would like to thank our donors for the continued support of the PyPy
project. Please help support us at &lt;a href="https://opencollective.com/pypy#section-contribute" target="_blank"&gt;Open Collective&lt;/a&gt;. If PyPy is not yet good enough for your needs, we are available for
direct consulting work.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://doc.pypy.org/en/latest/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on pypy, or general &lt;a class="reference external" href="https://doc.pypy.org/en/latest/project-ideas.html"&gt;help&lt;/a&gt; with making RPythonâs JIT even better. Since the
previous release, we have accepted contributions from 8 new contributors,
thanks for pitching in.&lt;/p&gt;
&lt;p&gt;If you are a python library maintainer and use c-extensions, please consider
making a cffi / cppyy version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy.&lt;/p&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;h2 style="text-align: center;"&gt;What is PyPy?&lt;/h2&gt;
&lt;p&gt;PyPy is a very compliant Python interpreter, almost a drop-in replacement for
CPython 2.7, 3.6, and 3.7. Itâs fast (&lt;a class="reference external" href="https://speed.pypy.org"&gt;PyPy and CPython 2.7.x&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;/p&gt;
&lt;p&gt;We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;/p&gt;
&lt;p&gt;This PyPy release supports:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;ul class="simple"&gt;&lt;li&gt;&lt;b&gt;x86&lt;/b&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 32 bits, OpenBSD, FreeBSD)&lt;/li&gt;&lt;li&gt;big- and little-endian variants of &lt;b&gt;PPC64&lt;/b&gt; running Linux,&lt;/li&gt;&lt;li&gt;&lt;b&gt;s390x&lt;/b&gt; running Linux&lt;/li&gt;&lt;li&gt;64-bit &lt;b&gt;ARM&lt;/b&gt; machines running Linux.&lt;/li&gt;&lt;/ul&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;PyPy does support ARM 32 bit processors, but does not release binaries.&lt;/p&gt;
&lt;/div&gt;

&lt;div class="section" id="changelog"&gt;
&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What else is new?&lt;/span&gt;&lt;/h2&gt;
For more information about the 7.3.2 release, see the full &lt;a href="https://pypy.readthedocs.io/en/latest/release-v7.3.2.html"&gt;changelog&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
Please update, and continue to help us make PyPy better.&lt;br&gt;
&lt;br&gt;
Cheers,&lt;br&gt;
The PyPy team
&lt;/div&gt;
&lt;p&gt;Â &lt;/p&gt;&lt;p&gt;Â &lt;/p&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2020/09/pypy-732-triple-release-python-27-36-3980901335490872787.html</guid><pubDate>Fri, 25 Sep 2020 06:45:00 GMT</pubDate></item><item><title>PyPy 7.3.1 released</title><link>https://www.pypy.org/posts/2020/04/pypy-731-released-6266451647387657480.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;div dir="ltr" style="text-align: left;"&gt;
The PyPy team is proud to release the version 7.3.1 of PyPy, which includes
two different interpreters:&lt;br&gt;

&lt;blockquote&gt;
&lt;div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.13&lt;/li&gt;
&lt;li&gt;PyPy3.6: which is an interpreter supporting the syntax and the features of
Python 3.6, including the stdlib for CPython 3.6.9.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
The interpreters are based on much the same codebase, thus the multiple
release. This is a micro release, no APIs have changed since the 7.3.0 release
in December, but read on to find out what is new.&lt;br&gt;

&lt;br&gt;
Conda Forge now &lt;a class="reference external" href="https://conda-forge.org/blog//2020/03/10/pypy"&gt;supports PyPy&lt;/a&gt; as a Python interpreter. The support right now
is being built out. After this release, many more c-extension-based
packages can be successfully built and uploaded. This is the result of a lot of
hard work and good will on the part of the Conda Forge team.  A big shout out
to them for taking this on.&lt;br&gt;

&lt;br&gt;
We have worked with the Python packaging group to support tooling around
building third party packages for Python, so this release updates the pip and
setuptools installed when executing &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pypy&lt;/span&gt; &lt;span class="pre"&gt;-mensurepip&lt;/span&gt;&lt;/code&gt; to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pip&amp;gt;=20&lt;/span&gt;&lt;/code&gt;. This
completes the work done to update the PEP 425 &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0425/#python-tag"&gt;python tag&lt;/a&gt; from &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pp373&lt;/span&gt;&lt;/code&gt; to
mean âPyPy 7.3 running python3â to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pp36&lt;/span&gt;&lt;/code&gt; meaning âPyPy running Python
3.6â (the format is recommended in the PEP). The tag itself was
changed in 7.3.0, but older pip versions build their own tag without querying
PyPy. This means that wheels built for the previous tag format will not be
discovered by pip from this version, so library authors should update their
PyPy-specific wheels on PyPI.&lt;br&gt;

&lt;br&gt;
Development of PyPy is transitioning to &lt;a class="reference external" href="https://foss.heptapod.net/pypy/pypy"&gt;https://foss.heptapod.net/pypy/pypy&lt;/a&gt;.
This move was covered more extensively in the &lt;a class="reference external" href="https://morepypy.blogspot.com/2020/02/pypy-and-cffi-have-moved-to-heptapod.html"&gt;blog post&lt;/a&gt; from last month.&lt;br&gt;

&lt;br&gt;
The &lt;a class="reference external" href="https://cffi.readthedocs.io/"&gt;CFFI&lt;/a&gt; backend has been updated to version 14.0. We recommend using CFFI
rather than c-extensions to interact with C, and using &lt;a class="reference external" href="https://cppyy.readthedocs.io/"&gt;cppyy&lt;/a&gt; for performant
wrapping of C++ code for Python. The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;cppyy&lt;/span&gt;&lt;/code&gt; backend has been enabled
experimentally for win32, try it out and let use know how it works.&lt;br&gt;

&lt;br&gt;
Enabling &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;cppyy&lt;/span&gt;&lt;/code&gt; requires a more modern C compiler, so win32 is now built
with MSVC160 (Visual Studio 2019). This is true for PyPy 3.6 as well as for 2.7.&lt;br&gt;

&lt;br&gt;
We have improved warmup time by up to 20%, performance of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;io.StringIO&lt;/span&gt;&lt;/code&gt; to
match if not be faster than CPython, and improved JIT code generation for
generators (and generator expressions in particular) when passing them to
functions like &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;sum&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;map&lt;/span&gt;&lt;/code&gt;, and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;map&lt;/span&gt;&lt;/code&gt; that consume them. Performance of closures has also be improved in certain situations.&lt;br&gt;

&lt;br&gt;
As always, this release fixed several issues and bugs raised by the growing
community of PyPy users.  We strongly recommend updating. Many of the fixes are
the direct result of end-user bug reports, so please continue reporting issues
as they crop up.&lt;br&gt;

You can find links to download the v7.3.1 releases here:&lt;br&gt;

&lt;blockquote&gt;
&lt;div&gt;
&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/div&gt;
&lt;/blockquote&gt;
We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work.&lt;br&gt;

&lt;br&gt;
We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://doc.pypy.org/en/latest/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org/"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://doc.pypy.org/en/latest/project-ideas.html"&gt;help&lt;/a&gt; with making RPythonâs JIT even better. Since the
previous release, we have accepted contributions from 13 new contributors,
thanks for pitching in.&lt;br&gt;

&lt;br&gt;
If you are a Python library maintainer and use c-extensions, please consider
making a cffi / cppyy version of your library that would be performant on PyPy.
In any case both &lt;a class="reference external" href="https://github.com/joerick/cibuildwheel"&gt;cibuildwheel&lt;/a&gt; and the &lt;a class="reference external" href="https://github.com/matthew-brett/multibuild"&gt;multibuild system&lt;/a&gt; support
building wheels for PyPy wheels.&lt;br&gt;


&lt;div class="section" id="what-is-pypy"&gt;
&lt;h2 style="text-align: center;"&gt;
Â &lt;/h2&gt;
&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What is PyPy?&lt;/span&gt;&lt;/h2&gt;
PyPy is a very compliant Python interpreter, almost a drop-in replacement for
CPython 2.7, 3.6, and soon 3.7. Itâs fast (&lt;a class="reference external" href="https://speed.pypy.org/"&gt;PyPy and CPython 2.7.x&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;br&gt;

&lt;br&gt;
We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;br&gt;

&lt;br&gt;
This PyPy release supports:&lt;br&gt;

&lt;blockquote&gt;
&lt;div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bits, Mac OS X 64 bits, Windows 32 bits, OpenBSD, FreeBSD)&lt;/li&gt;
&lt;li&gt;big- and little-endian variants of &lt;strong&gt;PPC64&lt;/strong&gt; running Linux,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/li&gt;
&lt;li&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;div class="section" id="changelog"&gt;
&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What else is new?&lt;/span&gt;&lt;/h2&gt;
For more information about the 7.3.1 release, see the full &lt;a href="https://pypy.readthedocs.io/en/latest/release-v7.3.1.html"&gt;changelog&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
Please update, and continue to help us make PyPy better.&lt;br&gt;
&lt;br&gt;
Cheers,&lt;br&gt;
The PyPy team
&lt;/div&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;
The PyPy TeamÂ  &lt;br&gt;

&lt;/div&gt;
&lt;/div&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2020/04/pypy-731-released-6266451647387657480.html</guid><pubDate>Fri, 10 Apr 2020 14:29:00 GMT</pubDate></item><item><title>PyPy 7.3.0 released</title><link>https://www.pypy.org/posts/2019/12/pypy-730-released-3614026620096963655.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;div dir="ltr" style="text-align: left;"&gt;
The PyPy team is proud to release the version 7.3.0 of PyPy, which includes
two different interpreters:&lt;br&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.13&lt;/li&gt;
&lt;li&gt;PyPy3.6: which is an interpreter supporting the syntax and the features of
Python 3.6, including the stdlib for CPython 3.6.9.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
The interpreters are based on much the same codebase, thus the double
release.&lt;br&gt;

&lt;br&gt;
We have worked with the python packaging group to support tooling around
building third party packages for python, so this release changes the ABI tag
for PyPy.&lt;br&gt;

&lt;br&gt;
Based on the great work done in &lt;a class="reference external" href="https://github.com/squeaky-pl/portable-pypy"&gt;portable-pypy&lt;/a&gt;, the linux downloads we
provide are now built on top of the &lt;a href="https://github.com/pypa/manylinux"&gt;&lt;span class="problematic" id="id11"&gt;manylinux2010&lt;/span&gt;&lt;/a&gt; CentOS6 docker image.
The tarballs include the needed shared objects to run on any platform that
supports manylinux2010 wheels, which should include all supported versions of
debian- and RedHat-based distributions (including Ubuntu, CentOS, and Fedora).&lt;br&gt;

&lt;br&gt;
The &lt;a class="reference external" href="https://cffi.readthedocs.io/"&gt;CFFI&lt;/a&gt; backend has been updated to version 1.13.1. We recommend using CFFI
rather than c-extensions to interact with C.&lt;br&gt;

The built-in &lt;a href="https://cppyy.readthedocs.io/en/latest/"&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;cppyy&lt;/span&gt;&lt;/code&gt;&lt;/a&gt; module was upgraded to 1.10.6, which
provides, among others, better template resolution, stricter &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;enum&lt;/span&gt;&lt;/code&gt; handling,
anonymous struct/unions, cmake fragments for distribution, optimizations for
PODs, and faster wrapper calls. We reccomend using &lt;a class="reference external" href="https://cppyy.readthedocs.io/"&gt;cppyy&lt;/a&gt; for performant
wrapping of C++ code for Python.&lt;br&gt;

&lt;br&gt;
The vendored pyrepl package for interaction inside the REPL was updated.&lt;br&gt;

&lt;br&gt;
Support for codepage encoding and decoding was added for Windows.&lt;br&gt;

&lt;br&gt;
As always, this release fixed several issues and bugs raised by the growing
community of PyPy users.  We strongly recommend updating. Many of the fixes are
the direct result of end-user bug reports, so please continue reporting issues
as they crop up.&lt;br&gt;

You can download the v7.3 releases here:&lt;br&gt;

&lt;blockquote&gt;
&lt;div&gt;
&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/div&gt;
&lt;/blockquote&gt;
We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work.&lt;br&gt;

&lt;br&gt;
We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://doc.pypy.org/en/latest/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org/"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular packages to run
on pypy, or general &lt;a class="reference external" href="https://doc.pypy.org/en/latest/project-ideas.html"&gt;help&lt;/a&gt; with making RPythonâs JIT even better. Since the
previous release, we have accepted contributions from 3 new contributors,
thanks for pitching in.&lt;br&gt;
&lt;br&gt;
If you are a python library maintainer and use c-extensions, please consider making a cffi / cppyy version of your library that would be performant on PyPy. If you are stuck with using the C-API, you can use &lt;a href="https://github.com/pypy/manylinux"&gt;docker images with PyPy built in&lt;/a&gt; or the &lt;a href="https://github.com/matthew-brett/multibuild/"&gt;multibuild system&lt;/a&gt; to build wheels.&lt;br&gt;
&lt;br&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What is PyPy?&lt;/span&gt;&lt;/h2&gt;
PyPy is a very compliant Python interpreter, almost a drop-in replacement for
CPython 2.7, 3.6. Itâs fast (&lt;a class="reference external" href="https://speed.pypy.org/"&gt;PyPy and CPython 2.7.x&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;br&gt;
&lt;br&gt;
We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;br&gt;
&lt;br&gt;
This PyPy release supports:&lt;br&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;&lt;b&gt;x86&lt;/b&gt; machines on most common operating systems
(Linux 32/64 bit, Mac OS X 64-bit, Windows 32-bit, OpenBSD, FreeBSD)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;big- and little-endian variants of &lt;b&gt;PPC64&lt;/b&gt; running Linux&lt;b&gt; &lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;&lt;b&gt;s390x&lt;/b&gt; running Linux&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;64-bit &lt;b&gt;ARM&lt;/b&gt; machines running Linux&lt;/li&gt;
&lt;/ul&gt;
Unfortunately at the moment of writing our ARM buildbots are out of service,
so for now we are &lt;b&gt;not&lt;/b&gt; releasing any binary for the ARM architecture (32-bit), although PyPy does support ARM 32-bit processors.&lt;br&gt;
&lt;br&gt;
&lt;div class="section" id="changelog"&gt;
&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What else is new?&lt;/span&gt;&lt;/h2&gt;
PyPy 7.2 was released in October, 2019.
There are many incremental improvements to RPython and PyPy, For more information about the 7.3.0 release, see the full &lt;a href="https://pypy.readthedocs.io/en/latest/release-v7.3.0.html"&gt;changelog&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
Please update, and continue to help us make PyPy better.&lt;br&gt;
&lt;br&gt;
Cheers,&lt;br&gt;
The PyPy team
&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2019/12/pypy-730-released-3614026620096963655.html</guid><pubDate>Tue, 24 Dec 2019 13:55:00 GMT</pubDate></item><item><title>PyPy v7.2 released</title><link>https://www.pypy.org/posts/2019/10/pypy-v72-released-1090406556726313495.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;div dir="ltr" style="text-align: left;"&gt;
The PyPy team is proud to release the version 7.2.0 of PyPy, which includes
two different interpreters:&lt;br&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.7 including the stdlib for CPython 2.7.13&lt;/li&gt;
&lt;/ul&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;PyPy3.6: which is an interpreter supporting the syntax and the features of
Python 3.6, including the stdlib for CPython 3.6.9.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
The interpreters are based on much the same codebase, thus the double
release.&lt;br&gt;

&lt;br&gt;
As always, this release is 100% compatible with the previous one and fixed
several issues and bugs raised by the growing community of PyPy users.
We strongly recommend updating. Many of the fixes are the direct result of
end-user bug reports, so please continue reporting issues as they crop up.&lt;br&gt;

&lt;br&gt;
You can download the v7.2 releases here:&lt;br&gt;

&lt;blockquote&gt;
&lt;div&gt;
&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/div&gt;
&lt;/blockquote&gt;
With the support of Arm Holdings Ltd. and &lt;a class="reference external" href="https://crossbario.com/"&gt;Crossbar.io&lt;/a&gt;, this release supports
the 64-bit &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;aarch64&lt;/span&gt;&lt;/code&gt; ARM architecture. More about the work and the
performance data around this welcome development can be found in the &lt;a class="reference external" href="https://morepypy.blogspot.com/2019/07/pypy-jit-for-aarch64.html"&gt;blog
post&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;

This release removes the âbetaâ tag from PyPy3.6. While there may still be some
small corner-case incompatibilities (around the exact error messages in
exceptions and the handling of faulty codec errorhandlers) we are happy with
the quality of the 3.6 series and are looking forward to working on a Python
3.7 interpreter.&lt;br&gt;

&lt;br&gt;
We updated our benchmark runner at &lt;a class="reference external" href="https://speed.pypy.org/"&gt;https://speed.pypy.org&lt;/a&gt; to a more modern
machine and updated the baseline python to CPython 2.7.11. Thanks to &lt;a class="reference external" href="https://baroquesoftware.com/"&gt;Baroque
Software&lt;/a&gt; for maintaining the benchmark runner.&lt;br&gt;

&lt;br&gt;
The CFFI-based &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;_ssl&lt;/span&gt;&lt;/code&gt; module was backported to PyPy2.7 and updated to use
&lt;a class="reference external" href="https://cryptography.io/en/latest"&gt;cryptography&lt;/a&gt; version 2.7. Additionally, the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;_hashlib&lt;/span&gt;&lt;/code&gt;, and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;crypt&lt;/span&gt;&lt;/code&gt; (or
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;_crypt&lt;/span&gt;&lt;/code&gt; on Python3) modules were converted to CFFI. This has two
consequences: end users and packagers can more easily update these libraries
for their platform by executing &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;(cd&lt;/span&gt; &lt;span class="pre"&gt;lib_pypy;&lt;/span&gt; &lt;span class="pre"&gt;../bin/pypy&lt;/span&gt; &lt;span class="pre"&gt;_*_build.py)&lt;/span&gt;&lt;/code&gt;.
More significantly, since PyPy itself links to fewer system shared objects
(DLLs), on platforms with a single runtime namespace like linux, different CFFI
and c-extension modules can load different versions of the same shared object
into PyPy without collision (&lt;a class="reference external" href="https://bitbucket.com/pypy/pypy/issues/2617"&gt;issue 2617&lt;/a&gt;).&lt;br&gt;

&lt;br&gt;
Until downstream providers begin to distribute c-extension builds with PyPy, we
have made packages for some common packages &lt;a class="reference external" href="https://github.com/antocuni/pypy-wheels"&gt;available as wheels&lt;/a&gt;.&lt;br&gt;

&lt;br&gt;
The &lt;a class="reference external" href="https://cffi.readthedocs.io/"&gt;CFFI&lt;/a&gt; backend has been updated to version 1.13.0. We recommend using CFFI
rather than c-extensions to interact with C, and &lt;a class="reference external" href="https://cppyy.readthedocs.io/"&gt;cppyy&lt;/a&gt; for interacting with
C++ code.&lt;br&gt;

&lt;br&gt;
Thanks to &lt;a class="reference external" href="https://anvil.works/"&gt;Anvil&lt;/a&gt;, we revived the &lt;a class="reference external" href="https://morepypy.blogspot.com/2019/08"&gt;PyPy Sandbox&lt;/a&gt;, (soon to be released) which allows total control
over a Python interpreterâs interactions with the external world.&lt;br&gt;

&lt;br&gt;
We implemented a new JSON decoder that is much faster, uses less memory, and
uses a JIT-friendly specialized dictionary. More about that in the recent &lt;a href="https://morepypy.blogspot.com/2019/10/pypys-new-json-parser.html"&gt;blog post&lt;/a&gt;&lt;br&gt;

&lt;br&gt;
We would like to thank our donors for the continued support of the PyPy
project. If PyPy is not quite good enough for your needs, we are available for
direct consulting work.
&lt;br&gt;
We would also like to thank our contributors and encourage new people to join
the project. PyPy has many layers and we need help with all of them: &lt;a class="reference external" href="https://pypy.readthedocs.io/en/latest/index.html"&gt;PyPy&lt;/a&gt;
and &lt;a class="reference external" href="https://rpython.readthedocs.org/"&gt;RPython&lt;/a&gt; documentation improvements, tweaking popular modules to run
on PyPy, or general &lt;a class="reference external" href="https://pypy.readthedocs.io/en/latest/project-ideas.html"&gt;help&lt;/a&gt; with making RPythonâs JIT even better. Since the
previous release, we have accepted contributions from 27 new contributors,
so thanks for pitching in.&lt;br&gt;
&lt;br&gt;

&lt;div class="section" id="what-is-pypy"&gt;
&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What is PyPy?&lt;/span&gt;&lt;/h2&gt;
PyPy is a very compliant Python interpreter, almost a drop-in replacement for
CPython 2.7, 3.6. Itâs fast (&lt;a class="reference external" href="https://speed.pypy.org/"&gt;PyPy and CPython 2.7.x&lt;/a&gt; performance
comparison) due to its integrated tracing JIT compiler.&lt;br&gt;

&lt;br&gt;
We also welcome developers of other &lt;a class="reference external" href="https://rpython.readthedocs.io/en/latest/examples.html"&gt;dynamic languages&lt;/a&gt; to see what RPython
can do for them.&lt;br&gt;

&lt;br&gt;
This PyPy release supports:&lt;br&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;&lt;strong&gt;x86&lt;/strong&gt; machines on most common operating systems
(Linux 32/64 bit, Mac OS X 64-bit, Windows 32-bit, OpenBSD, FreeBSD)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;big- and little-endian variants of &lt;strong&gt;PPC64&lt;/strong&gt; running Linux&lt;strong&gt; &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;&lt;strong&gt;s390x&lt;/strong&gt; running Linux&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-pypy"&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;64-bit &lt;strong&gt;ARM&lt;/strong&gt; machines running Linux&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
Unfortunately at the moment of writing our ARM buildbots are out of service,
so for now we are &lt;strong&gt;not&lt;/strong&gt; releasing any binary for the ARM architecture (32-bit), although PyPy does support ARM 32-bit processors.&lt;br&gt;
&lt;br&gt;
&lt;div class="section" id="changelog"&gt;
&lt;h2 style="text-align: center;"&gt;
&lt;span style="font-size: x-large;"&gt;What else is new?&lt;/span&gt;&lt;/h2&gt;
PyPy 7.1 was released in March, 2019.
There are many incremental improvements to RPython and PyPy, For more information about the 7.2.0 release, see the full &lt;a href="https://pypy.readthedocs.io/en/latest/release-v7.2.0.html"&gt;changelog&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
Please update, and continue to help us make PyPy better.&lt;br&gt;
&lt;br&gt;
Cheers,&lt;br&gt;
The PyPy team
&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;

&lt;/div&gt;
&lt;/div&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2019/10/pypy-v72-released-1090406556726313495.html</guid><pubDate>Mon, 14 Oct 2019 18:46:00 GMT</pubDate></item><item><title>PyPy 7.1.1 Bug Fix Release</title><link>https://www.pypy.org/posts/2019/04/pypy-711-bug-fix-release-6539023630991217367.html</link><dc:creator>The PyPy Team</dc:creator><description>&lt;div dir="ltr" style="text-align: left;"&gt;
The PyPy team is proud to release a bug-fix release version 7.1.1 of PyPy, which
includes two different interpreters:&lt;br&gt;
&lt;ul style="text-align: left;"&gt;
&lt;li&gt;PyPy2.7, which is an interpreter supporting the syntax and the features of
Python 2.&lt;/li&gt;
&lt;li&gt;PyPy3.6-beta: the second official release of PyPy to support 3.6
features.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
The interpreters are based on much the same codebase, thus the double
release.&lt;br&gt;

&lt;br&gt;
This bugfix fixes bugs related to large lists, dictionaries, and sets, some corner cases with unicode, and &lt;a href="https://www.python.org/dev/peps/pep-3118/"&gt;PEP 3118&lt;/a&gt; memory views of ctype structures. It also fixes a few issues related to the ARM 32-bit backend. For the complete list see the &lt;a href="https://doc.pypy.org/en/latest/release-v7.1.1.html"&gt;changelog.&lt;/a&gt;&lt;br&gt;
&lt;br&gt;
You can download the v7.1.1 releases here:&lt;br&gt;

&lt;blockquote&gt;
&lt;div&gt;
&lt;a class="reference external" href="https://pypy.org/download.html"&gt;https://pypy.org/download.html&lt;/a&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
As always, this release is 100% compatible with the previous one and fixed
several issues and bugs raised by the growing community of PyPy users.
We strongly recommend updating.&lt;br&gt;
&lt;br&gt;
The PyPy3.6 release is rapidly maturing, but is still considered beta-quality.&lt;br&gt;
&lt;br&gt;
The PyPy team &lt;/div&gt;</description><category>release</category><guid>https://www.pypy.org/posts/2019/04/pypy-711-bug-fix-release-6539023630991217367.html</guid><pubDate>Thu, 18 Apr 2019 15:24:00 GMT</pubDate></item></channel></rss>